/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.math3.analysis.interpolation;

import org.apache.commons.math3.exception.DimensionMismatchException;
import org.apache.commons.math3.exception.NoDataException;
import org.apache.commons.math3.exception.NonMonotonicSequenceException;
import org.apache.commons.math3.exception.NumberIsTooSmallException;
import org.apache.commons.math3.util.MathArrays;
import gov.nasa.jpf.annotation.Conditional;
import static br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.*;

/**
 * Generates a tricubic interpolating function.
 *
 * @since 3.4
 */
public class TricubicInterpolator implements TrivariateGridInterpolator {

    @Conditional
    public static boolean _mut94306 = false, _mut94307 = false, _mut94308 = false, _mut94309 = false, _mut94310 = false, _mut94311 = false, _mut94312 = false, _mut94313 = false, _mut94314 = false, _mut94315 = false, _mut94316 = false, _mut94317 = false, _mut94318 = false, _mut94319 = false, _mut94320 = false, _mut94321 = false, _mut94322 = false, _mut94323 = false, _mut94324 = false, _mut94325 = false, _mut94326 = false, _mut94327 = false, _mut94328 = false, _mut94329 = false, _mut94330 = false, _mut94331 = false, _mut94332 = false, _mut94333 = false, _mut94334 = false, _mut94335 = false, _mut94336 = false, _mut94337 = false, _mut94338 = false, _mut94339 = false, _mut94340 = false, _mut94341 = false, _mut94342 = false, _mut94343 = false, _mut94344 = false, _mut94345 = false, _mut94346 = false, _mut94347 = false, _mut94348 = false, _mut94349 = false, _mut94350 = false, _mut94351 = false, _mut94352 = false, _mut94353 = false, _mut94354 = false, _mut94355 = false, _mut94356 = false, _mut94357 = false, _mut94358 = false, _mut94359 = false, _mut94360 = false, _mut94361 = false, _mut94362 = false, _mut94363 = false, _mut94364 = false, _mut94365 = false, _mut94366 = false, _mut94367 = false, _mut94368 = false, _mut94369 = false, _mut94370 = false, _mut94371 = false, _mut94372 = false, _mut94373 = false, _mut94374 = false, _mut94375 = false, _mut94376 = false, _mut94377 = false, _mut94378 = false, _mut94379 = false, _mut94380 = false, _mut94381 = false, _mut94382 = false, _mut94383 = false, _mut94384 = false, _mut94385 = false, _mut94386 = false, _mut94387 = false, _mut94388 = false, _mut94389 = false, _mut94390 = false, _mut94391 = false, _mut94392 = false, _mut94393 = false, _mut94394 = false, _mut94395 = false, _mut94396 = false, _mut94397 = false, _mut94398 = false, _mut94399 = false, _mut94400 = false, _mut94401 = false, _mut94402 = false, _mut94403 = false, _mut94404 = false, _mut94405 = false, _mut94406 = false, _mut94407 = false, _mut94408 = false, _mut94409 = false, _mut94410 = false, _mut94411 = false, _mut94412 = false, _mut94413 = false, _mut94414 = false, _mut94415 = false, _mut94416 = false, _mut94417 = false, _mut94418 = false, _mut94419 = false, _mut94420 = false, _mut94421 = false, _mut94422 = false, _mut94423 = false, _mut94424 = false, _mut94425 = false, _mut94426 = false, _mut94427 = false, _mut94428 = false, _mut94429 = false, _mut94430 = false, _mut94431 = false, _mut94432 = false, _mut94433 = false, _mut94434 = false, _mut94435 = false, _mut94436 = false, _mut94437 = false, _mut94438 = false, _mut94439 = false, _mut94440 = false, _mut94441 = false, _mut94442 = false, _mut94443 = false, _mut94444 = false, _mut94445 = false, _mut94446 = false, _mut94447 = false, _mut94448 = false, _mut94449 = false, _mut94450 = false, _mut94451 = false, _mut94452 = false, _mut94453 = false, _mut94454 = false, _mut94455 = false, _mut94456 = false, _mut94457 = false, _mut94458 = false, _mut94459 = false, _mut94460 = false, _mut94461 = false, _mut94462 = false, _mut94463 = false, _mut94464 = false, _mut94465 = false, _mut94466 = false, _mut94467 = false, _mut94468 = false, _mut94469 = false, _mut94470 = false, _mut94471 = false, _mut94472 = false, _mut94473 = false, _mut94474 = false, _mut94475 = false, _mut94476 = false, _mut94477 = false, _mut94478 = false, _mut94479 = false, _mut94480 = false, _mut94481 = false, _mut94482 = false, _mut94483 = false, _mut94484 = false, _mut94485 = false, _mut94486 = false, _mut94487 = false, _mut94488 = false, _mut94489 = false, _mut94490 = false, _mut94491 = false, _mut94492 = false, _mut94493 = false, _mut94494 = false, _mut94495 = false, _mut94496 = false, _mut94497 = false, _mut94498 = false, _mut94499 = false, _mut94500 = false, _mut94501 = false, _mut94502 = false, _mut94503 = false, _mut94504 = false, _mut94505 = false, _mut94506 = false, _mut94507 = false, _mut94508 = false, _mut94509 = false, _mut94510 = false, _mut94511 = false, _mut94512 = false, _mut94513 = false, _mut94514 = false, _mut94515 = false, _mut94516 = false, _mut94517 = false, _mut94518 = false, _mut94519 = false, _mut94520 = false, _mut94521 = false, _mut94522 = false, _mut94523 = false, _mut94524 = false, _mut94525 = false, _mut94526 = false, _mut94527 = false, _mut94528 = false, _mut94529 = false, _mut94530 = false, _mut94531 = false, _mut94532 = false, _mut94533 = false, _mut94534 = false, _mut94535 = false, _mut94536 = false, _mut94537 = false, _mut94538 = false, _mut94539 = false, _mut94540 = false, _mut94541 = false, _mut94542 = false, _mut94543 = false, _mut94544 = false, _mut94545 = false, _mut94546 = false, _mut94547 = false, _mut94548 = false, _mut94549 = false, _mut94550 = false, _mut94551 = false, _mut94552 = false, _mut94553 = false, _mut94554 = false, _mut94555 = false, _mut94556 = false, _mut94557 = false, _mut94558 = false, _mut94559 = false, _mut94560 = false, _mut94561 = false, _mut94562 = false, _mut94563 = false, _mut94564 = false, _mut94565 = false, _mut94566 = false, _mut94567 = false, _mut94568 = false, _mut94569 = false, _mut94570 = false, _mut94571 = false, _mut94572 = false, _mut94573 = false;

    /**
     * {@inheritDoc}
     */
    public TricubicInterpolatingFunction interpolate(final double[] xval, final double[] yval, final double[] zval, final double[][][] fval) throws NoDataException, NumberIsTooSmallException, DimensionMismatchException, NonMonotonicSequenceException {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128");
        if ((_mut94328 ? ((_mut94322 ? ((_mut94316 ? (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) && ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315)) : (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) || ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315))) && ROR_equals(zval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94317, _mut94318, _mut94319, _mut94320, _mut94321)) : ((_mut94316 ? (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) && ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315)) : (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) || ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315))) || ROR_equals(zval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94317, _mut94318, _mut94319, _mut94320, _mut94321))) && ROR_equals(fval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94323, _mut94324, _mut94325, _mut94326, _mut94327)) : ((_mut94322 ? ((_mut94316 ? (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) && ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315)) : (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) || ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315))) && ROR_equals(zval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94317, _mut94318, _mut94319, _mut94320, _mut94321)) : ((_mut94316 ? (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) && ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315)) : (ROR_equals(xval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94306, _mut94307, _mut94308, _mut94309, _mut94310) || ROR_equals(yval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94311, _mut94312, _mut94313, _mut94314, _mut94315))) || ROR_equals(zval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94317, _mut94318, _mut94319, _mut94320, _mut94321))) || ROR_equals(fval.length, 0, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94323, _mut94324, _mut94325, _mut94326, _mut94327)))) {
            throw new NoDataException();
        }
        if (ROR_not_equals(xval.length, fval.length, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94329, _mut94330, _mut94331, _mut94332, _mut94333)) {
            throw new DimensionMismatchException(xval.length, fval.length);
        }
        MathArrays.checkOrder(xval);
        MathArrays.checkOrder(yval);
        MathArrays.checkOrder(zval);
        final int xLen = xval.length;
        final int yLen = yval.length;
        final int zLen = zval.length;
        // Approximation to the partial derivatives using finite differences.
        final double[][][] dFdX = new double[xLen][yLen][zLen];
        final double[][][] dFdY = new double[xLen][yLen][zLen];
        final double[][][] dFdZ = new double[xLen][yLen][zLen];
        final double[][][] d2FdXdY = new double[xLen][yLen][zLen];
        final double[][][] d2FdXdZ = new double[xLen][yLen][zLen];
        final double[][][] d2FdYdZ = new double[xLen][yLen][zLen];
        final double[][][] d3FdXdYdZ = new double[xLen][yLen][zLen];
        for (int i = 1; ROR_less(i, AOR_minus(xLen, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94518, _mut94519, _mut94520, _mut94521), "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94522, _mut94523, _mut94524, _mut94525, _mut94526); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35");
            if (ROR_not_equals(yval.length, fval[i].length, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94334, _mut94335, _mut94336, _mut94337, _mut94338)) {
                throw new DimensionMismatchException(yval.length, fval[i].length);
            }
            final int nI = AOR_plus(i, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94339, _mut94340, _mut94341, _mut94342);
            final int pI = AOR_minus(i, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94343, _mut94344, _mut94345, _mut94346);
            final double nX = xval[nI];
            final double pX = xval[pI];
            final double deltaX = AOR_minus(nX, pX, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94347, _mut94348, _mut94349, _mut94350);
            for (int j = 1; ROR_less(j, AOR_minus(yLen, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94509, _mut94510, _mut94511, _mut94512), "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94513, _mut94514, _mut94515, _mut94516, _mut94517); j++) {
                br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35");
                if (ROR_not_equals(zval.length, fval[i][j].length, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94351, _mut94352, _mut94353, _mut94354, _mut94355)) {
                    throw new DimensionMismatchException(zval.length, fval[i][j].length);
                }
                final int nJ = AOR_plus(j, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94356, _mut94357, _mut94358, _mut94359);
                final int pJ = AOR_minus(j, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94360, _mut94361, _mut94362, _mut94363);
                final double nY = yval[nJ];
                final double pY = yval[pJ];
                final double deltaY = AOR_minus(nY, pY, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94364, _mut94365, _mut94366, _mut94367);
                final double deltaXY = AOR_multiply(deltaX, deltaY, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94368, _mut94369, _mut94370, _mut94371);
                for (int k = 1; ROR_less(k, AOR_minus(zLen, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94500, _mut94501, _mut94502, _mut94503), "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94504, _mut94505, _mut94506, _mut94507, _mut94508); k++) {
                    br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35");
                    final int nK = AOR_plus(k, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94372, _mut94373, _mut94374, _mut94375);
                    final int pK = AOR_minus(k, 1, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94376, _mut94377, _mut94378, _mut94379);
                    final double nZ = zval[nK];
                    final double pZ = zval[pK];
                    final double deltaZ = AOR_minus(nZ, pZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94380, _mut94381, _mut94382, _mut94383);
                    dFdX[i][j][k] = AOR_divide((AOR_minus(fval[nI][j][k], fval[pI][j][k], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94384, _mut94385, _mut94386, _mut94387)), deltaX, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94388, _mut94389, _mut94390, _mut94391);
                    dFdY[i][j][k] = AOR_divide((AOR_minus(fval[i][nJ][k], fval[i][pJ][k], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94392, _mut94393, _mut94394, _mut94395)), deltaY, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94396, _mut94397, _mut94398, _mut94399);
                    dFdZ[i][j][k] = AOR_divide((AOR_minus(fval[i][j][nK], fval[i][j][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94400, _mut94401, _mut94402, _mut94403)), deltaZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94404, _mut94405, _mut94406, _mut94407);
                    final double deltaXZ = AOR_multiply(deltaX, deltaZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94408, _mut94409, _mut94410, _mut94411);
                    final double deltaYZ = AOR_multiply(deltaY, deltaZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94412, _mut94413, _mut94414, _mut94415);
                    d2FdXdY[i][j][k] = AOR_divide((AOR_plus(AOR_minus(AOR_minus(fval[nI][nJ][k], fval[nI][pJ][k], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94416, _mut94417, _mut94418, _mut94419), fval[pI][nJ][k], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94420, _mut94421, _mut94422, _mut94423), fval[pI][pJ][k], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94424, _mut94425, _mut94426, _mut94427)), deltaXY, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94428, _mut94429, _mut94430, _mut94431);
                    d2FdXdZ[i][j][k] = AOR_divide((AOR_plus(AOR_minus(AOR_minus(fval[nI][j][nK], fval[nI][j][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94432, _mut94433, _mut94434, _mut94435), fval[pI][j][nK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94436, _mut94437, _mut94438, _mut94439), fval[pI][j][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94440, _mut94441, _mut94442, _mut94443)), deltaXZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94444, _mut94445, _mut94446, _mut94447);
                    d2FdYdZ[i][j][k] = AOR_divide((AOR_plus(AOR_minus(AOR_minus(fval[i][nJ][nK], fval[i][nJ][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94448, _mut94449, _mut94450, _mut94451), fval[i][pJ][nK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94452, _mut94453, _mut94454, _mut94455), fval[i][pJ][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94456, _mut94457, _mut94458, _mut94459)), deltaYZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94460, _mut94461, _mut94462, _mut94463);
                    final double deltaXYZ = AOR_multiply(deltaXY, deltaZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94464, _mut94465, _mut94466, _mut94467);
                    d3FdXdYdZ[i][j][k] = AOR_divide((AOR_minus(AOR_plus(AOR_plus(AOR_minus(AOR_plus(AOR_minus(AOR_minus(fval[nI][nJ][nK], fval[nI][pJ][nK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94468, _mut94469, _mut94470, _mut94471), fval[pI][nJ][nK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94472, _mut94473, _mut94474, _mut94475), fval[pI][pJ][nK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94476, _mut94477, _mut94478, _mut94479), fval[nI][nJ][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94480, _mut94481, _mut94482, _mut94483), fval[nI][pJ][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94484, _mut94485, _mut94486, _mut94487), fval[pI][nJ][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94488, _mut94489, _mut94490, _mut94491), fval[pI][pJ][pK], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94492, _mut94493, _mut94494, _mut94495)), deltaXYZ, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate_35", _mut94496, _mut94497, _mut94498, _mut94499);
                }
            }
        }
        // Create the interpolating function.
        return new TricubicInterpolatingFunction(xval, yval, zval, fval, dFdX, dFdY, dFdZ, d2FdXdY, d2FdXdZ, d2FdYdZ, d3FdXdYdZ) {

            /**
             * {@inheritDoc}
             */
            @Override
            public boolean isValidPoint(double x, double y, double z) {
                br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128");
                if ((_mut94573 ? ((_mut94563 ? ((_mut94557 ? ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) && ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556)) : ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) || ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556))) && ROR_less(z, zval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94558, _mut94559, _mut94560, _mut94561, _mut94562)) : ((_mut94557 ? ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) && ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556)) : ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) || ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556))) || ROR_less(z, zval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94558, _mut94559, _mut94560, _mut94561, _mut94562))) && ROR_greater(z, zval[AOR_minus(zval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94564, _mut94565, _mut94566, _mut94567)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94568, _mut94569, _mut94570, _mut94571, _mut94572)) : ((_mut94563 ? ((_mut94557 ? ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) && ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556)) : ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) || ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556))) && ROR_less(z, zval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94558, _mut94559, _mut94560, _mut94561, _mut94562)) : ((_mut94557 ? ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) && ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556)) : ((_mut94547 ? ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) && ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546)) : ((_mut94541 ? (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) && ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540)) : (ROR_less(x, xval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94527, _mut94528, _mut94529, _mut94530, _mut94531) || ROR_greater(x, xval[AOR_minus(xval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94532, _mut94533, _mut94534, _mut94535)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94536, _mut94537, _mut94538, _mut94539, _mut94540))) || ROR_less(y, yval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94542, _mut94543, _mut94544, _mut94545, _mut94546))) || ROR_greater(y, yval[AOR_minus(yval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94548, _mut94549, _mut94550, _mut94551)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94552, _mut94553, _mut94554, _mut94555, _mut94556))) || ROR_less(z, zval[1], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94558, _mut94559, _mut94560, _mut94561, _mut94562))) || ROR_greater(z, zval[AOR_minus(zval.length, 2, "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94564, _mut94565, _mut94566, _mut94567)], "org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.isValidPoint_128", _mut94568, _mut94569, _mut94570, _mut94571, _mut94572)))) {
                    return false;
                } else {
                    return true;
                }
            }
        };
    }
}
