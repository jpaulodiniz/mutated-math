/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.math3.optim.linear;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.MatrixUtils;
import org.apache.commons.math3.linear.RealVector;
import org.apache.commons.math3.optim.nonlinear.scalar.GoalType;
import org.apache.commons.math3.optim.PointValuePair;
import org.apache.commons.math3.util.Precision;
import gov.nasa.jpf.annotation.Conditional;
import static br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.*;

/**
 * A tableau for use in the Simplex method.
 *
 * <p>
 * Example:
 * <pre>
 *   W |  Z |  x1 |  x2 |  x- | s1 |  s2 |  a1 |  RHS
 * ---------------------------------------------------
 *  -1    0    0     0     0     0     0     1     0   &lt;= phase 1 objective
 *   0    1   -15   -10    0     0     0     0     0   &lt;= phase 2 objective
 *   0    0    1     0     0     1     0     0     2   &lt;= constraint 1
 *   0    0    0     1     0     0     1     0     3   &lt;= constraint 2
 *   0    0    1     1     0     0     0     1     4   &lt;= constraint 3
 * </pre>
 * W: Phase 1 objective function</br>
 * Z: Phase 2 objective function</br>
 * x1 &amp; x2: Decision variables</br>
 * x-: Extra decision variable to allow for negative values</br>
 * s1 &amp; s2: Slack/Surplus variables</br>
 * a1: Artificial variable</br>
 * RHS: Right hand side</br>
 * </p>
 * @since 2.0
 */
class SimplexTableau implements Serializable {

    @Conditional
    public static boolean _mut59544 = false, _mut59545 = false, _mut59546 = false, _mut59547 = false, _mut59548 = false, _mut59549 = false, _mut59550 = false, _mut59551 = false, _mut59552 = false, _mut59553 = false, _mut59554 = false, _mut59555 = false, _mut59556 = false, _mut59557 = false, _mut59558 = false, _mut59559 = false, _mut59560 = false, _mut59561 = false, _mut59562 = false, _mut59563 = false, _mut59564 = false, _mut59565 = false, _mut59566 = false, _mut59567 = false, _mut59568 = false, _mut59569 = false, _mut59570 = false, _mut59571 = false, _mut59572 = false, _mut59573 = false, _mut59574 = false, _mut59575 = false, _mut59576 = false, _mut59577 = false, _mut59578 = false, _mut59579 = false, _mut59580 = false, _mut59581 = false, _mut59582 = false, _mut59583 = false, _mut59584 = false, _mut59585 = false, _mut59586 = false, _mut59587 = false, _mut59588 = false, _mut59589 = false, _mut59590 = false, _mut59591 = false, _mut59592 = false, _mut59593 = false, _mut59594 = false, _mut59595 = false, _mut59596 = false, _mut59597 = false, _mut59598 = false, _mut59599 = false, _mut59600 = false, _mut59601 = false, _mut59602 = false, _mut59603 = false, _mut59604 = false, _mut59605 = false, _mut59606 = false, _mut59607 = false, _mut59608 = false, _mut59609 = false, _mut59610 = false, _mut59611 = false, _mut59612 = false, _mut59613 = false, _mut59614 = false, _mut59615 = false, _mut59616 = false, _mut59617 = false, _mut59618 = false, _mut59619 = false, _mut59620 = false, _mut59621 = false, _mut59622 = false, _mut59623 = false, _mut59624 = false, _mut59625 = false, _mut59626 = false, _mut59627 = false, _mut59628 = false, _mut59629 = false, _mut59630 = false, _mut59631 = false, _mut59632 = false, _mut59633 = false, _mut59634 = false, _mut59635 = false, _mut59636 = false, _mut59637 = false, _mut59638 = false, _mut59639 = false, _mut59640 = false, _mut59641 = false, _mut59642 = false, _mut59643 = false, _mut59644 = false, _mut59645 = false, _mut59646 = false, _mut59647 = false, _mut59648 = false, _mut59649 = false, _mut59650 = false, _mut59651 = false, _mut59652 = false, _mut59653 = false, _mut59654 = false, _mut59655 = false, _mut59656 = false, _mut59657 = false, _mut59658 = false, _mut59659 = false, _mut59660 = false, _mut59661 = false, _mut59662 = false, _mut59663 = false, _mut59664 = false, _mut59665 = false, _mut59666 = false, _mut59667 = false, _mut59668 = false, _mut59669 = false, _mut59670 = false, _mut59671 = false, _mut59672 = false, _mut59673 = false, _mut59674 = false, _mut59675 = false, _mut59676 = false, _mut59677 = false, _mut59678 = false, _mut59679 = false, _mut59680 = false, _mut59681 = false, _mut59682 = false, _mut59683 = false, _mut59684 = false, _mut59685 = false, _mut59686 = false, _mut59687 = false, _mut59688 = false, _mut59689 = false, _mut59690 = false, _mut59691 = false, _mut59692 = false, _mut59693 = false, _mut59694 = false, _mut59695 = false, _mut59696 = false, _mut59697 = false, _mut59698 = false, _mut59699 = false, _mut59700 = false, _mut59701 = false, _mut59702 = false, _mut59703 = false, _mut59704 = false, _mut59705 = false, _mut59706 = false, _mut59707 = false, _mut59708 = false, _mut59709 = false, _mut59710 = false, _mut59711 = false, _mut59712 = false, _mut59713 = false, _mut59714 = false, _mut59715 = false, _mut59716 = false, _mut59717 = false, _mut59718 = false, _mut59719 = false, _mut59720 = false, _mut59721 = false, _mut59722 = false, _mut59723 = false, _mut59724 = false, _mut59725 = false, _mut59726 = false, _mut59727 = false, _mut59728 = false, _mut59729 = false, _mut59730 = false, _mut59731 = false, _mut59732 = false, _mut59733 = false, _mut59734 = false, _mut59735 = false, _mut59736 = false, _mut59737 = false, _mut59738 = false, _mut59739 = false, _mut59740 = false, _mut59741 = false, _mut59742 = false, _mut59743 = false, _mut59744 = false, _mut59745 = false, _mut59746 = false, _mut59747 = false, _mut59748 = false, _mut59749 = false, _mut59750 = false, _mut59751 = false, _mut59752 = false, _mut59753 = false, _mut59754 = false, _mut59755 = false, _mut59756 = false, _mut59757 = false, _mut59758 = false, _mut59759 = false, _mut59760 = false, _mut59761 = false, _mut59762 = false, _mut59763 = false, _mut59764 = false, _mut59765 = false, _mut59766 = false, _mut59767 = false, _mut59768 = false, _mut59769 = false, _mut59770 = false, _mut59771 = false, _mut59772 = false, _mut59773 = false, _mut59774 = false, _mut59775 = false, _mut59776 = false, _mut59777 = false, _mut59778 = false, _mut59779 = false, _mut59780 = false, _mut59781 = false, _mut59782 = false, _mut59783 = false, _mut59784 = false, _mut59785 = false, _mut59786 = false, _mut59787 = false, _mut59788 = false, _mut59789 = false, _mut59790 = false, _mut59791 = false, _mut59792 = false, _mut59793 = false, _mut59794 = false, _mut59795 = false, _mut59796 = false, _mut59797 = false, _mut59798 = false, _mut59799 = false, _mut59800 = false, _mut59801 = false, _mut59802 = false, _mut59803 = false, _mut59804 = false, _mut59805 = false, _mut59806 = false, _mut59807 = false, _mut59808 = false, _mut59809 = false, _mut59810 = false, _mut59811 = false, _mut59812 = false, _mut59813 = false, _mut59814 = false, _mut59815 = false, _mut59816 = false, _mut59817 = false, _mut59818 = false, _mut59819 = false, _mut59820 = false, _mut59821 = false, _mut59822 = false, _mut59823 = false, _mut59824 = false, _mut59825 = false, _mut59826 = false, _mut59827 = false, _mut59828 = false, _mut59829 = false, _mut59830 = false, _mut59831 = false, _mut59832 = false, _mut59833 = false, _mut59834 = false, _mut59835 = false, _mut59836 = false, _mut59837 = false, _mut59838 = false, _mut59839 = false, _mut59840 = false, _mut59841 = false, _mut59842 = false, _mut59843 = false, _mut59844 = false, _mut59845 = false, _mut59846 = false, _mut59847 = false, _mut59848 = false, _mut59849 = false, _mut59850 = false, _mut59851 = false, _mut59852 = false, _mut59853 = false, _mut59854 = false, _mut59855 = false, _mut59856 = false, _mut59857 = false;

    /**
     * Column label for negative vars.
     */
    private static final String NEGATIVE_VAR_COLUMN_LABEL = "x-";

    /**
     * Serializable version identifier.
     */
    private static final long serialVersionUID = -1369660067587938365L;

    /**
     * Linear objective function.
     */
    private final LinearObjectiveFunction f;

    /**
     * Linear constraints.
     */
    private final List<LinearConstraint> constraints;

    /**
     * Whether to restrict the variables to non-negative values.
     */
    private final boolean restrictToNonNegative;

    /**
     * The variables each column represents
     */
    private final List<String> columnLabels = new ArrayList<String>();

    /**
     * Simple tableau.
     */
    private transient Array2DRowRealMatrix tableau;

    /**
     * Number of decision variables.
     */
    private final int numDecisionVariables;

    /**
     * Number of slack variables.
     */
    private final int numSlackVariables;

    /**
     * Number of artificial variables.
     */
    private int numArtificialVariables;

    /**
     * Amount of error to accept when checking for optimality.
     */
    private final double epsilon;

    /**
     * Amount of error to accept in floating point comparisons.
     */
    private final int maxUlps;

    /**
     * Maps basic variables to row they are basic in.
     */
    private int[] basicVariables;

    /**
     * Maps rows to their corresponding basic variables.
     */
    private int[] basicRows;

    /**
     * Builds a tableau for a linear problem.
     *
     * @param f Linear objective function.
     * @param constraints Linear constraints.
     * @param goalType Optimization goal: either {@link GoalType#MAXIMIZE}
     * or {@link GoalType#MINIMIZE}.
     * @param restrictToNonNegative Whether to restrict the variables to non-negative values.
     * @param epsilon Amount of error to accept when checking for optimality.
     */
    SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon) {
        this(f, constraints, goalType, restrictToNonNegative, epsilon, SimplexSolver.DEFAULT_ULPS);
    }

    /**
     * Build a tableau for a linear problem.
     * @param f linear objective function
     * @param constraints linear constraints
     * @param goalType type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}
     * @param restrictToNonNegative whether to restrict the variables to non-negative values
     * @param epsilon amount of error to accept when checking for optimality
     * @param maxUlps amount of error to accept in floating point comparisons
     */
    SimplexTableau(final LinearObjectiveFunction f, final Collection<LinearConstraint> constraints, final GoalType goalType, final boolean restrictToNonNegative, final double epsilon, final int maxUlps) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.SimplexTableau_133");
        this.f = f;
        this.constraints = normalizeConstraints(constraints);
        this.restrictToNonNegative = restrictToNonNegative;
        this.epsilon = epsilon;
        this.maxUlps = maxUlps;
        this.numDecisionVariables = AOR_plus(f.getCoefficients().getDimension(), (restrictToNonNegative ? 0 : 1), "org.apache.commons.math3.optim.linear.SimplexTableau.SimplexTableau_133", _mut59544, _mut59545, _mut59546, _mut59547);
        this.numSlackVariables = AOR_plus(getConstraintTypeCounts(Relationship.LEQ), getConstraintTypeCounts(Relationship.GEQ), "org.apache.commons.math3.optim.linear.SimplexTableau.SimplexTableau_133", _mut59548, _mut59549, _mut59550, _mut59551);
        this.numArtificialVariables = AOR_plus(getConstraintTypeCounts(Relationship.EQ), getConstraintTypeCounts(Relationship.GEQ), "org.apache.commons.math3.optim.linear.SimplexTableau.SimplexTableau_133", _mut59552, _mut59553, _mut59554, _mut59555);
        this.tableau = createTableau(goalType == GoalType.MAXIMIZE);
        // we know that only slack or artificial variables can be basic
        initializeBasicVariables(getSlackVariableOffset());
        initializeColumnLabels();
    }

    /**
     * Initialize the labels for the columns.
     */
    protected void initializeColumnLabels() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159");
        if (ROR_equals(getNumObjectiveFunctions(), 2, "org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159", _mut59556, _mut59557, _mut59558, _mut59559, _mut59560)) {
            columnLabels.add("W");
        }
        columnLabels.add("Z");
        for (int i = 0; ROR_less(i, getOriginalNumDecisionVariables(), "org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159", _mut59561, _mut59562, _mut59563, _mut59564, _mut59565); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159");
            columnLabels.add("x" + i);
        }
        if (!restrictToNonNegative) {
            columnLabels.add(NEGATIVE_VAR_COLUMN_LABEL);
        }
        for (int i = 0; ROR_less(i, getNumSlackVariables(), "org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159", _mut59566, _mut59567, _mut59568, _mut59569, _mut59570); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159");
            columnLabels.add("s" + i);
        }
        for (int i = 0; ROR_less(i, getNumArtificialVariables(), "org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159", _mut59571, _mut59572, _mut59573, _mut59574, _mut59575); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels_159");
            columnLabels.add("a" + i);
        }
        columnLabels.add("RHS");
    }

    /**
     * Create the tableau by itself.
     * @param maximize if true, goal is to maximize the objective function
     * @return created tableau
     */
    protected Array2DRowRealMatrix createTableau(final boolean maximize) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184");
        // create a matrix of the correct size
        int width = AOR_plus(AOR_plus(AOR_plus(AOR_plus(numDecisionVariables, numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59576, _mut59577, _mut59578, _mut59579), numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59580, _mut59581, _mut59582, _mut59583), getNumObjectiveFunctions(), "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59584, _mut59585, _mut59586, _mut59587), // + 1 is for RHS
        1, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59588, _mut59589, _mut59590, _mut59591);
        int height = AOR_plus(constraints.size(), getNumObjectiveFunctions(), "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59592, _mut59593, _mut59594, _mut59595);
        Array2DRowRealMatrix matrix = new Array2DRowRealMatrix(height, width);
        // initialize the objective function rows
        if (ROR_equals(getNumObjectiveFunctions(), 2, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59596, _mut59597, _mut59598, _mut59599, _mut59600)) {
            matrix.setEntry(0, 0, -1);
        }
        int zIndex = (ROR_equals(getNumObjectiveFunctions(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59601, _mut59602, _mut59603, _mut59604, _mut59605)) ? 0 : 1;
        matrix.setEntry(zIndex, zIndex, maximize ? 1 : -1);
        RealVector objectiveCoefficients = maximize ? f.getCoefficients().mapMultiply(-1) : f.getCoefficients();
        copyArray(objectiveCoefficients.toArray(), matrix.getDataRef()[zIndex]);
        matrix.setEntry(zIndex, AOR_minus(width, 1, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59606, _mut59607, _mut59608, _mut59609), maximize ? f.getConstantTerm() : AOR_multiply(-1, f.getConstantTerm(), "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59610, _mut59611, _mut59612, _mut59613));
        if (!restrictToNonNegative) {
            matrix.setEntry(zIndex, AOR_minus(getSlackVariableOffset(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59614, _mut59615, _mut59616, _mut59617), getInvertedCoefficientSum(objectiveCoefficients));
        }
        // initialize the constraint rows
        int slackVar = 0;
        int artificialVar = 0;
        for (int i = 0; ROR_less(i, constraints.size(), "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59647, _mut59648, _mut59649, _mut59650, _mut59651); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184");
            LinearConstraint constraint = constraints.get(i);
            int row = AOR_plus(getNumObjectiveFunctions(), i, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59618, _mut59619, _mut59620, _mut59621);
            // decision variable coefficients
            copyArray(constraint.getCoefficients().toArray(), matrix.getDataRef()[row]);
            // x-
            if (!restrictToNonNegative) {
                matrix.setEntry(row, AOR_minus(getSlackVariableOffset(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59622, _mut59623, _mut59624, _mut59625), getInvertedCoefficientSum(constraint.getCoefficients()));
            }
            // RHS
            matrix.setEntry(row, AOR_minus(width, 1, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59626, _mut59627, _mut59628, _mut59629), constraint.getValue());
            // slack variables
            if (constraint.getRelationship() == Relationship.LEQ) {
                // slack
                matrix.setEntry(row, AOR_plus(getSlackVariableOffset(), slackVar++, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59634, _mut59635, _mut59636, _mut59637), 1);
            } else if (constraint.getRelationship() == Relationship.GEQ) {
                // excess
                matrix.setEntry(row, AOR_plus(getSlackVariableOffset(), slackVar++, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59630, _mut59631, _mut59632, _mut59633), -1);
            }
            // artificial variables
            if ((_mut59638 ? ((constraint.getRelationship() == Relationship.EQ) && (constraint.getRelationship() == Relationship.GEQ)) : ((constraint.getRelationship() == Relationship.EQ) || (constraint.getRelationship() == Relationship.GEQ)))) {
                matrix.setEntry(0, AOR_plus(getArtificialVariableOffset(), artificialVar, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59639, _mut59640, _mut59641, _mut59642), 1);
                matrix.setEntry(row, AOR_plus(getArtificialVariableOffset(), artificialVar++, "org.apache.commons.math3.optim.linear.SimplexTableau.createTableau_184", _mut59643, _mut59644, _mut59645, _mut59646), 1);
                matrix.setRowVector(0, matrix.getRowVector(0).subtract(matrix.getRowVector(row)));
            }
        }
        return matrix;
    }

    /**
     * Get new versions of the constraints which have positive right hand sides.
     * @param originalConstraints original (not normalized) constraints
     * @return new versions of the constraints
     */
    public List<LinearConstraint> normalizeConstraints(Collection<LinearConstraint> originalConstraints) {
        List<LinearConstraint> normalized = new ArrayList<LinearConstraint>(originalConstraints.size());
        for (LinearConstraint constraint : originalConstraints) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.normalizeConstraints_251");
            normalized.add(normalize(constraint));
        }
        return normalized;
    }

    /**
     * Get a new equation equivalent to this one with a positive right hand side.
     * @param constraint reference constraint
     * @return new equation
     */
    private LinearConstraint normalize(final LinearConstraint constraint) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.normalize_264");
        if (ROR_less(constraint.getValue(), 0, "org.apache.commons.math3.optim.linear.SimplexTableau.normalize_264", _mut59652, _mut59653, _mut59654, _mut59655, _mut59656)) {
            return new LinearConstraint(constraint.getCoefficients().mapMultiply(-1), constraint.getRelationship().oppositeRelationship(), AOR_multiply(-1, constraint.getValue(), "org.apache.commons.math3.optim.linear.SimplexTableau.normalize_264", _mut59657, _mut59658, _mut59659, _mut59660));
        }
        return new LinearConstraint(constraint.getCoefficients(), constraint.getRelationship(), constraint.getValue());
    }

    /**
     * Get the number of objective functions in this tableau.
     * @return 2 for Phase 1.  1 for Phase 2.
     */
    protected final int getNumObjectiveFunctions() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getNumObjectiveFunctions_278");
        return ROR_greater(this.numArtificialVariables, 0, "org.apache.commons.math3.optim.linear.SimplexTableau.getNumObjectiveFunctions_278", _mut59661, _mut59662, _mut59663, _mut59664, _mut59665) ? 2 : 1;
    }

    /**
     * Get a count of constraints corresponding to a specified relationship.
     * @param relationship relationship to count
     * @return number of constraint with the specified relationship
     */
    private int getConstraintTypeCounts(final Relationship relationship) {
        int count = 0;
        for (final LinearConstraint constraint : constraints) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getConstraintTypeCounts_287");
            if (constraint.getRelationship() == relationship) {
                ++count;
            }
        }
        return count;
    }

    /**
     * Get the -1 times the sum of all coefficients in the given array.
     * @param coefficients coefficients to sum
     * @return the -1 times the sum of all coefficients in the given array.
     */
    protected static double getInvertedCoefficientSum(final RealVector coefficients) {
        double sum = 0;
        for (double coefficient : coefficients.toArray()) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getInvertedCoefficientSum_302");
            sum -= coefficient;
        }
        return sum;
    }

    /**
     * Checks whether the given column is basic.
     * @param col index of the column to check
     * @return the row that the variable is basic in.  null if the column is not basic
     */
    protected Integer getBasicRow(final int col) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getBasicRow_315");
        final int row = basicVariables[col];
        return ROR_equals(row, -1, "org.apache.commons.math3.optim.linear.SimplexTableau.getBasicRow_315", _mut59666, _mut59667, _mut59668, _mut59669, _mut59670) ? null : row;
    }

    /**
     * Returns the variable that is basic in this row.
     * @param row the index of the row to check
     * @return the variable that is basic for this row.
     */
    protected int getBasicVariable(final int row) {
        return basicRows[row];
    }

    /**
     * Initializes the basic variable / row mapping.
     * @param startColumn the column to start
     */
    private void initializeBasicVariables(final int startColumn) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.initializeBasicVariables_333");
        basicVariables = new int[AOR_minus(getWidth(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.initializeBasicVariables_333", _mut59671, _mut59672, _mut59673, _mut59674)];
        basicRows = new int[getHeight()];
        Arrays.fill(basicVariables, -1);
        for (int i = startColumn; ROR_less(i, AOR_minus(getWidth(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.initializeBasicVariables_333", _mut59675, _mut59676, _mut59677, _mut59678), "org.apache.commons.math3.optim.linear.SimplexTableau.initializeBasicVariables_333", _mut59679, _mut59680, _mut59681, _mut59682, _mut59683); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.initializeBasicVariables_333");
            Integer row = findBasicRow(i);
            if (row != null) {
                basicVariables[i] = row;
                basicRows[row] = i;
            }
        }
    }

    /**
     * Returns the row in which the given column is basic.
     * @param col index of the column
     * @return the row that the variable is basic in, or {@code null} if the variable is not basic.
     */
    private Integer findBasicRow(final int col) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.findBasicRow_353");
        Integer row = null;
        for (int i = 0; ROR_less(i, getHeight(), "org.apache.commons.math3.optim.linear.SimplexTableau.findBasicRow_353", _mut59685, _mut59686, _mut59687, _mut59688, _mut59689); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.findBasicRow_353");
            final double entry = getEntry(i, col);
            if ((_mut59684 ? (Precision.equals(entry, 1d, maxUlps) || (row == null)) : (Precision.equals(entry, 1d, maxUlps) && (row == null)))) {
                row = i;
            } else if (!Precision.equals(entry, 0d, maxUlps)) {
                return null;
            }
        }
        return row;
    }

    /**
     * Removes the phase 1 objective function, positive cost non-artificial variables,
     * and the non-basic artificial variables from this tableau.
     */
    protected void dropPhase1Objective() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370");
        if (ROR_equals(getNumObjectiveFunctions(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59690, _mut59691, _mut59692, _mut59693, _mut59694)) {
            return;
        }
        final Set<Integer> columnsToDrop = new TreeSet<Integer>();
        columnsToDrop.add(0);
        // positive cost non-artificial variables
        for (int i = getNumObjectiveFunctions(); ROR_less(i, getArtificialVariableOffset(), "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59700, _mut59701, _mut59702, _mut59703, _mut59704); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370");
            final double entry = getEntry(0, i);
            if (ROR_greater(Precision.compareTo(entry, 0d, epsilon), 0, "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59695, _mut59696, _mut59697, _mut59698, _mut59699)) {
                columnsToDrop.add(i);
            }
        }
        // non-basic artificial variables
        for (int i = 0; ROR_less(i, getNumArtificialVariables(), "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59709, _mut59710, _mut59711, _mut59712, _mut59713); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370");
            int col = AOR_plus(i, getArtificialVariableOffset(), "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59705, _mut59706, _mut59707, _mut59708);
            if (getBasicRow(col) == null) {
                columnsToDrop.add(col);
            }
        }
        final double[][] matrix = new double[AOR_minus(getHeight(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59714, _mut59715, _mut59716, _mut59717)][AOR_minus(getWidth(), columnsToDrop.size(), "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59718, _mut59719, _mut59720, _mut59721)];
        for (int i = 1; ROR_less(i, getHeight(), "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59731, _mut59732, _mut59733, _mut59734, _mut59735); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370");
            int col = 0;
            for (int j = 0; ROR_less(j, getWidth(), "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59726, _mut59727, _mut59728, _mut59729, _mut59730); j++) {
                br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370");
                if (!columnsToDrop.contains(j)) {
                    matrix[AOR_minus(i, 1, "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59722, _mut59723, _mut59724, _mut59725)][col++] = getEntry(i, j);
                }
            }
        }
        // remove the columns in reverse order so the indices are correct
        Integer[] drop = columnsToDrop.toArray(new Integer[columnsToDrop.size()]);
        for (int i = drop.length - 1; ROR_greater_equals(i, 0, "org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370", _mut59736, _mut59737, _mut59738, _mut59739, _mut59740); i--) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective_370");
            columnLabels.remove((int) drop[i]);
        }
        this.tableau = new Array2DRowRealMatrix(matrix);
        this.numArtificialVariables = 0;
        // need to update the basic variable mappings as row/columns have been dropped
        initializeBasicVariables(getNumObjectiveFunctions());
    }

    /**
     * @param src the source array
     * @param dest the destination array
     */
    private void copyArray(final double[] src, final double[] dest) {
        System.arraycopy(src, 0, dest, getNumObjectiveFunctions(), src.length);
    }

    /**
     * Returns whether the problem is at an optimal state.
     * @return whether the model has been solved
     */
    boolean isOptimal() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.isOptimal_428");
        final double[] objectiveFunctionRow = getRow(0);
        final int end = getRhsOffset();
        for (int i = getNumObjectiveFunctions(); ROR_less(i, end, "org.apache.commons.math3.optim.linear.SimplexTableau.isOptimal_428", _mut59746, _mut59747, _mut59748, _mut59749, _mut59750); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.isOptimal_428");
            final double entry = objectiveFunctionRow[i];
            if (ROR_less(Precision.compareTo(entry, 0d, epsilon), 0, "org.apache.commons.math3.optim.linear.SimplexTableau.isOptimal_428", _mut59741, _mut59742, _mut59743, _mut59744, _mut59745)) {
                return false;
            }
        }
        return true;
    }

    /**
     * Get the current solution.
     * @return current solution
     */
    protected PointValuePair getSolution() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444");
        int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);
        Integer negativeVarBasicRow = ROR_greater(negativeVarColumn, 0, "org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444", _mut59751, _mut59752, _mut59753, _mut59754, _mut59755) ? getBasicRow(negativeVarColumn) : null;
        double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
        final Set<Integer> usedBasicRows = new HashSet<Integer>();
        final double[] coefficients = new double[getOriginalNumDecisionVariables()];
        for (int i = 0; ROR_less(i, coefficients.length, "org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444", _mut59775, _mut59776, _mut59777, _mut59778, _mut59779); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444");
            int colIndex = columnLabels.indexOf("x" + i);
            if (ROR_less(colIndex, 0, "org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444", _mut59756, _mut59757, _mut59758, _mut59759, _mut59760)) {
                coefficients[i] = 0;
                continue;
            }
            Integer basicRow = getBasicRow(colIndex);
            if ((_mut59766 ? (basicRow != null || ROR_equals(basicRow, 0, "org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444", _mut59761, _mut59762, _mut59763, _mut59764, _mut59765)) : (basicRow != null && ROR_equals(basicRow, 0, "org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444", _mut59761, _mut59762, _mut59763, _mut59764, _mut59765)))) {
                // variables that are still part of the objective function
                coefficients[i] = 0;
            } else if (usedBasicRows.contains(basicRow)) {
                // then we choose the first and set the rest equal to 0
                coefficients[i] = AOR_minus(0, (restrictToNonNegative ? 0 : mostNegative), "org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444", _mut59771, _mut59772, _mut59773, _mut59774);
            } else {
                usedBasicRows.add(basicRow);
                coefficients[i] = AOR_minus((basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())), (restrictToNonNegative ? 0 : mostNegative), "org.apache.commons.math3.optim.linear.SimplexTableau.getSolution_444", _mut59767, _mut59768, _mut59769, _mut59770);
            }
        }
        return new PointValuePair(coefficients, f.value(coefficients));
    }

    /**
     * Perform the row operations of the simplex algorithm with the selected
     * pivot column and row.
     * @param pivotCol the pivot column
     * @param pivotRow the pivot row
     */
    protected void performRowOperations(int pivotCol, int pivotRow) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.performRowOperations_483");
        // set the pivot element to 1
        final double pivotVal = getEntry(pivotRow, pivotCol);
        divideRow(pivotRow, pivotVal);
        // set the rest of the pivot column to 0
        for (int i = 0; ROR_less(i, getHeight(), "org.apache.commons.math3.optim.linear.SimplexTableau.performRowOperations_483", _mut59790, _mut59791, _mut59792, _mut59793, _mut59794); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.performRowOperations_483");
            if (ROR_not_equals(i, pivotRow, "org.apache.commons.math3.optim.linear.SimplexTableau.performRowOperations_483", _mut59780, _mut59781, _mut59782, _mut59783, _mut59784)) {
                final double multiplier = getEntry(i, pivotCol);
                if (ROR_not_equals(multiplier, 0.0, "org.apache.commons.math3.optim.linear.SimplexTableau.performRowOperations_483", _mut59785, _mut59786, _mut59787, _mut59788, _mut59789)) {
                    subtractRow(i, pivotRow, multiplier);
                }
            }
        }
        // update the basic variable mappings
        final int previousBasicVariable = getBasicVariable(pivotRow);
        basicVariables[previousBasicVariable] = -1;
        basicVariables[pivotCol] = pivotRow;
        basicRows[pivotRow] = pivotCol;
    }

    /**
     * Divides one row by a given divisor.
     * <p>
     * After application of this operation, the following will hold:
     * <pre>dividendRow = dividendRow / divisor</pre>
     *
     * @param dividendRowIndex index of the row
     * @param divisor value of the divisor
     */
    protected void divideRow(final int dividendRowIndex, final double divisor) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.divideRow_514");
        final double[] dividendRow = getRow(dividendRowIndex);
        for (int j = 0; ROR_less(j, getWidth(), "org.apache.commons.math3.optim.linear.SimplexTableau.divideRow_514", _mut59795, _mut59796, _mut59797, _mut59798, _mut59799); j++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.divideRow_514");
            dividendRow[j] /= divisor;
        }
    }

    /**
     * Subtracts a multiple of one row from another.
     * <p>
     * After application of this operation, the following will hold:
     * <pre>minuendRow = minuendRow - multiple * subtrahendRow</pre>
     *
     * @param minuendRowIndex row index
     * @param subtrahendRowIndex row index
     * @param multiplier multiplication factor
     */
    protected void subtractRow(final int minuendRowIndex, final int subtrahendRowIndex, final double multiplier) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.subtractRow_531");
        final double[] minuendRow = getRow(minuendRowIndex);
        final double[] subtrahendRow = getRow(subtrahendRowIndex);
        for (int i = 0; ROR_less(i, getWidth(), "org.apache.commons.math3.optim.linear.SimplexTableau.subtractRow_531", _mut59804, _mut59805, _mut59806, _mut59807, _mut59808); i++) {
            br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.subtractRow_531");
            minuendRow[i] -= AOR_multiply(subtrahendRow[i], multiplier, "org.apache.commons.math3.optim.linear.SimplexTableau.subtractRow_531", _mut59800, _mut59801, _mut59802, _mut59803);
        }
    }

    /**
     * Get the width of the tableau.
     * @return width of the tableau
     */
    protected final int getWidth() {
        return tableau.getColumnDimension();
    }

    /**
     * Get the height of the tableau.
     * @return height of the tableau
     */
    protected final int getHeight() {
        return tableau.getRowDimension();
    }

    /**
     * Get an entry of the tableau.
     * @param row row index
     * @param column column index
     * @return entry at (row, column)
     */
    protected final double getEntry(final int row, final int column) {
        return tableau.getEntry(row, column);
    }

    /**
     * Set an entry of the tableau.
     * @param row row index
     * @param column column index
     * @param value for the entry
     */
    protected final void setEntry(final int row, final int column, final double value) {
        tableau.setEntry(row, column, value);
    }

    /**
     * Get the offset of the first slack variable.
     * @return offset of the first slack variable
     */
    protected final int getSlackVariableOffset() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getSlackVariableOffset_579");
        return AOR_plus(getNumObjectiveFunctions(), numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.getSlackVariableOffset_579", _mut59809, _mut59810, _mut59811, _mut59812);
    }

    /**
     * Get the offset of the first artificial variable.
     * @return offset of the first artificial variable
     */
    protected final int getArtificialVariableOffset() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getArtificialVariableOffset_587");
        return AOR_plus(AOR_plus(getNumObjectiveFunctions(), numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.getArtificialVariableOffset_587", _mut59813, _mut59814, _mut59815, _mut59816), numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.getArtificialVariableOffset_587", _mut59817, _mut59818, _mut59819, _mut59820);
    }

    /**
     * Get the offset of the right hand side.
     * @return offset of the right hand side
     */
    protected final int getRhsOffset() {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.getRhsOffset_595");
        return AOR_minus(getWidth(), 1, "org.apache.commons.math3.optim.linear.SimplexTableau.getRhsOffset_595", _mut59821, _mut59822, _mut59823, _mut59824);
    }

    /**
     * Get the number of decision variables.
     * <p>
     * If variables are not restricted to positive values, this will include 1 extra decision variable to represent
     * the absolute value of the most negative variable.
     *
     * @return number of decision variables
     * @see #getOriginalNumDecisionVariables()
     */
    protected final int getNumDecisionVariables() {
        return numDecisionVariables;
    }

    /**
     * Get the original number of decision variables.
     * @return original number of decision variables
     * @see #getNumDecisionVariables()
     */
    protected final int getOriginalNumDecisionVariables() {
        return f.getCoefficients().getDimension();
    }

    /**
     * Get the number of slack variables.
     * @return number of slack variables
     */
    protected final int getNumSlackVariables() {
        return numSlackVariables;
    }

    /**
     * Get the number of artificial variables.
     * @return number of artificial variables
     */
    protected final int getNumArtificialVariables() {
        return numArtificialVariables;
    }

    /**
     * Get the row from the tableau.
     * @param row the row index
     * @return the reference to the underlying row data
     */
    protected final double[] getRow(int row) {
        return tableau.getDataRef()[row];
    }

    /**
     * Get the tableau data.
     * @return tableau data
     */
    protected final double[][] getData() {
        return tableau.getData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public boolean equals(Object other) {
        br.ufmg.labsoft.mutvariants.schematalib.SchemataLibMethods.listener.listen("org.apache.commons.math3.optim.linear.SimplexTableau.equals_655");
        if (this == other) {
            return true;
        }
        if (other instanceof SimplexTableau) {
            SimplexTableau rhs = (SimplexTableau) other;
            return (_mut59857 ? ((_mut59856 ? ((_mut59855 ? ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) || f.equals(rhs.f)) : ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) && f.equals(rhs.f))) || constraints.equals(rhs.constraints)) : ((_mut59855 ? ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) || f.equals(rhs.f)) : ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) && f.equals(rhs.f))) && constraints.equals(rhs.constraints))) || tableau.equals(rhs.tableau)) : ((_mut59856 ? ((_mut59855 ? ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) || f.equals(rhs.f)) : ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) && f.equals(rhs.f))) || constraints.equals(rhs.constraints)) : ((_mut59855 ? ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) || f.equals(rhs.f)) : ((_mut59854 ? ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) || (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853))) : ((_mut59848 ? ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) || (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847))) : ((_mut59842 ? ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) || (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841))) : ((_mut59836 ? ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) || (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835))) : ((_mut59830 ? ((restrictToNonNegative == rhs.restrictToNonNegative) || (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829))) : ((restrictToNonNegative == rhs.restrictToNonNegative) && (ROR_equals(numDecisionVariables, rhs.numDecisionVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59825, _mut59826, _mut59827, _mut59828, _mut59829)))) && (ROR_equals(numSlackVariables, rhs.numSlackVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59831, _mut59832, _mut59833, _mut59834, _mut59835)))) && (ROR_equals(numArtificialVariables, rhs.numArtificialVariables, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59837, _mut59838, _mut59839, _mut59840, _mut59841)))) && (ROR_equals(epsilon, rhs.epsilon, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59843, _mut59844, _mut59845, _mut59846, _mut59847)))) && (ROR_equals(maxUlps, rhs.maxUlps, "org.apache.commons.math3.optim.linear.SimplexTableau.equals_655", _mut59849, _mut59850, _mut59851, _mut59852, _mut59853)))) && f.equals(rhs.f))) && constraints.equals(rhs.constraints))) && tableau.equals(rhs.tableau)));
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public int hashCode() {
        return Boolean.valueOf(restrictToNonNegative).hashCode() ^ numDecisionVariables ^ numSlackVariables ^ numArtificialVariables ^ Double.valueOf(epsilon).hashCode() ^ maxUlps ^ f.hashCode() ^ constraints.hashCode() ^ tableau.hashCode();
    }

    /**
     * Serialize the instance.
     * @param oos stream where object should be written
     * @throws IOException if object cannot be written to stream
     */
    private void writeObject(ObjectOutputStream oos) throws IOException {
        oos.defaultWriteObject();
        MatrixUtils.serializeRealMatrix(tableau, oos);
    }

    /**
     * Deserialize the instance.
     * @param ois stream from which the object should be read
     * @throws ClassNotFoundException if a class in the stream cannot be found
     * @throws IOException if object cannot be read from the stream
     */
    private void readObject(ObjectInputStream ois) throws ClassNotFoundException, IOException {
        ois.defaultReadObject();
        MatrixUtils.deserializeRealMatrix(this, "tableau", ois);
    }
}
